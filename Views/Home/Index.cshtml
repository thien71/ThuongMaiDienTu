@model IEnumerable<ThuongMaiDienTu.Models.tb_Product>


@{
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
    ViewBag.Title = "Home Page";
}

<main class="mt-40">
    @{
        var categories = (IEnumerable<ThuongMaiDienTu.Models.tb_ProductCategory>)ViewBag.Categories;
        var mainCategories = categories.Where(c => c.ParentID == null);
    }
    <div class="container pb-4">
        <div class="row justify-content-center align-content-center">
            @*<div class="col-3 category p-0">
                    <ul class="list-group">
                        @foreach (var category in mainCategories)
                        {
                            if (category != null && category.ParentID == null)
                            {
                                <li class="list-group-item">
                                    <a class="text-black d-flex justify-content-start align-content-center" href="/Product">
                                        <span>
                                            <img class="mr-4" src="~/images/@category.Image" />
                                        </span>
                                        <span>@category.Name</span>
                                    </a>
                                </li>
                            }
                        }
                    </ul>
                </div>*@
            <div class="col-12 slider p-0">
                <div id="imageSlider" class="carousel slide" data-ride="carousel">
                    <div class="carousel-inner">
                        <div class="carousel-item active">
                            <img src="../images/slider_1.jpg" alt="Slider 1">
                        </div>
                        <div class="carousel-item">
                            <img src="../images/slider_2.jpg" alt="Slider 2">
                        </div>
                        <div class="carousel-item">
                            <img src="../images/slider_3.jpg" alt="Slider 3">
                        </div>
                        <div class="carousel-item">
                            <img src="../images/slider_4.jpg" alt="Slider 4">
                        </div>
                    </div>
                    <a class="carousel-control-prev" href="#imageSlider" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#imageSlider" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="row py-4 product-category">
        @{
            var danhmuc = ((IEnumerable<ThuongMaiDienTu.Models.tb_ProductCategory>)ViewBag.Categories).Where(x => x.ParentID == null);
        }

        @foreach (var cate in danhmuc)
        {
            <a href="/Product" class="col-sm-4 col-md-3 col-lg-2 mb-4 col-2-4">
                <div class="d-flex flex-column align-items-center">
                    <img src="/images/@Url.Content(cate.Image)" alt="@cate.Name" class="img-fluid mb-2" style="max-width: 80px; max-height: 80px;" />
                    <h4 class="text-center">@cate.Name</h4>
                </div>
            </a>
        }
    </div>

    <div class="product-hot">
        <div class="product-hot-header">
            <div class="product-hot-header-left">
                <img src="~/images/hot_sale.png" alt="Hotsale cuối tuần" />
            </div>
            <div class="product-hot-header-right" id="countdown">
                <div id="countdown-timer">
                    Kết thúc sau:
                    <span id="days">00</span>:
                    <span id="hours">00</span>:
                    <span id="minutes">00</span>:
                    <span id="seconds">00</span>
                </div>
            </div>
        </div>
        <div class="product-hot-body" id="product-container">
            @{
                var products = (IEnumerable<ThuongMaiDienTu.Models.tb_Product>)ViewBag.Products;
                var topProducts = products.OrderByDescending(x => x.Price).Take(10);
                foreach (var product in topProducts)
                {
                    <a href="/Product/Details/@product.ProductID" class="product-item-cover col-2-4">
                        <span>-@product.PromotionPrice%</span>
                        <div class="product-item">
                            <div class="product-img">
                                <img src="~/images/@product.Image" alt="" />
                            </div>
                            <h4 class="product-title">@product.Name</h4>
                            <p class="product-price">
                                <span class="product-price-old">@string.Format("{0:N0}đ", product.Price)</span>
                                <span class="product-price-new">@string.Format("{0:N0}đ", product.Price * (100 - product.PromotionPrice) / 100)</span>
                            </p>
                        </div>
                    </a>
                }
            }
        </div>
        <div class="scroll-button left"><i class="fas fa-chevron-left"></i></div>
        <div class="scroll-button right"><i class="fas fa-chevron-right"></i></div>
    </div>

    @{
        var random = new Random();
        var r3danhmuc = ((IEnumerable<ThuongMaiDienTu.Models.tb_ProductCategory>)ViewBag.Categories).Where(x => x.ParentID == null).OrderBy(x => random.Next()).Take(3);

        foreach (var itemDM in r3danhmuc)
        {
            <div class="container random-cate">
                <h3 class="random-cate-heading">@itemDM.Name</h3>
                <div class="random-cate-row">
                    @{
                        var pro = ((IEnumerable<ThuongMaiDienTu.Models.tb_Product>)ViewBag.Products)
                                        .Where(x => x.CateID == itemDM.CateID) // Chỉ lấy sản phẩm thuộc category hiện tại
                                        .OrderBy(x => random.Next()) // Sắp xếp sản phẩm theo thứ tự ngẫu nhiên
                                        .Take(10); // Chọn ngẫu nhiên 10 sản phẩm

                        foreach (var product in pro)
                        {
                            <a href="/Product/Details/@product.ProductID" class="random-cate-cover col-2-4">
                                <span>-@product.PromotionPrice%</span>
                                <div class="product-item">
                                    <div class="product-img">
                                        <img src="~/images/@product.Image" alt="" />
                                    </div>
                                    <h4 class="product-title">@product.Name</h4>
                                    <p class="product-price">
                                        <span class="product-price-old">@string.Format("{0:N0}đ", product.Price)</span>
                                        <span class="product-price-new">@string.Format("{0:N0}đ", product.Price * (100 - product.PromotionPrice) / 100)</span>
                                    </p>
                                </div>
                            </a>
                        }
                    }
                </div>
            </div>
        }
    }

    <div class="brand-container">
        @foreach (var brand in ViewBag.Brands)
        {
            <div class="brand-item">
                <img src="~/images/@brand.Avatar" alt="@brand.Name" />
                <h4>@brand.Name</h4>
            </div>
        }
    </div>
</main>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const productContainer = document.getElementById('product-container');
        const scrollButtonLeft = document.querySelector('.scroll-button.left');
        const scrollButtonRight = document.querySelector('.scroll-button.right');

        const productItemWidth = document.querySelector('.product-item-cover').offsetWidth + 16; // Kích thước của một item và margin-right

        scrollButtonLeft.addEventListener('click', function () {
            productContainer.scrollLeft -= productItemWidth;
        });

        scrollButtonRight.addEventListener('click', function () {
            productContainer.scrollLeft += productItemWidth;
        });
    });
</script>

<script>
    // Tính toán thời gian đến cuối tuần
    function getTimeRemaining() {
        const now = new Date();
        const end = new Date();
        const dayOfWeek = 5; // 5 là thứ Sáu, sử dụng 6 cho thứ Bảy
        const daysUntilFriday = (dayOfWeek + 7 - now.getDay()) % 7;
        end.setDate(now.getDate() + daysUntilFriday);
        end.setHours(23);
        end.setMinutes(59);
        end.setSeconds(59);
        end.setMilliseconds(999);
        const total = Date.parse(end) - Date.parse(now);
        const seconds = Math.floor((total / 1000) % 60);
        const minutes = Math.floor((total / 1000 / 60) % 60);
        const hours = Math.floor((total / (1000 * 60 * 60)) % 24);
        const days = Math.floor(total / (1000 * 60 * 60 * 24));
        return {
            total,
            days,
            hours,
            minutes,
            seconds
        };
    }

    // Cập nhật giao diện
    function updateClock() {
        const t = getTimeRemaining();
        document.getElementById('days').innerHTML = ('0' + t.days).slice(-2);
        document.getElementById('hours').innerHTML = ('0' + t.hours).slice(-2);
        document.getElementById('minutes').innerHTML = ('0' + t.minutes).slice(-2);
        document.getElementById('seconds').innerHTML = ('0' + t.seconds).slice(-2);
        if (t.total <= 0) {
            clearInterval(timeinterval);
        }
    }

    updateClock();
    const timeinterval = setInterval(updateClock, 1000);
</script>


@*<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>*@
@*<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>*@
@*<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>*@