@model IEnumerable<ThuongMaiDienTu.Models.tb_Product>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<main class="mt-0">
    <!-- banner-2 -->
    @*<div class="page-head_agile_info_w3l">

        </div>*@
    <!-- //banner-2 -->
    <!-- page -->
    <div class="services-breadcrumb">
        <div class="agile_inner_breadcrumb">
            <div class="container">
                <ul class="w3_short">
                    <li>
                        <i class="fa-solid fa-house"></i>
                        <a href="/Home">Trang chủ</a>
                        <i class="fa-solid fa-angle-right"></i>
                    </li>
                    <li>Sản phẩm</li>
                </ul>
            </div>
        </div>
    </div>
    <!-- //page -->
    <!-- top Products -->
    <div class="ads-grid py-sm-0 py-4">
        <div class="container py-xl-4 py-lg-2">


            @{
                var categories = (IEnumerable<ThuongMaiDienTu.Models.tb_ProductCategory>)ViewBag.Categories;
                var mainCategories = categories.Where(c => c.ParentID == null);
                var subCategories = categories.Where(c => c.ParentID != null);
            }

            <div class="row py-3">
                <div class="col-lg-2 mt-lg-0 mt-4 p-lg-0">
                    <div class="side-bar p-sm-2 p-3">
                        <!-- Category -->
                        <div class="search-hotel border-bottom py-2">
                            <h3 class="agileits-sear-head mb-2 text-center">Bộ lọc</h3>
                            <div class="left-side py-2">
                                <ul class="main-categories">
                                    <li class="has-children">
                                        <label for="category" class="toggle-arrow">
                                            <span class="span">Danh mục</span>
                                        </label>
                                        @{
                                            var subCategoriesList = subCategories.ToList();
                                        }
                                        <ul class="sub-categories" id="categoryList">
                                            @for (var i = 0; i < subCategoriesList.Count(); i++)
                                            {
                                                <li class="@(i >= 8 ? "hidden" : "")">
                                                    <input type="checkbox" class="checked" id="@("child_" + subCategoriesList[i].CateID)">
                                                    <label for="@("child_" + subCategoriesList[i].CateID)">
                                                        <span class="span">@subCategoriesList[i].Name</span>
                                                    </label>
                                                </li>
                                            }
                                        </ul>
                                        @if (subCategoriesList.Count() > 8)
                                        {
                                            <button id="toggleCategoryBtn" class="btn btn-link">Xem thêm</button>
                                        }
                                    </li>

                                    <!-- Thêm danh mục lọc cho thương hiệu -->
                                    <li>
                                        <label for="brand" class="toggle-arrow">
                                            <span class="span">Thương hiệu</span>
                                        </label>
                                        <ul class="sub-categories" id="brandList">
                                            @for (var i = 0; i < ViewBag.Brands.Count; i++)
                                            {
                                                <li class="@(i >= 8 ? "hidden" : "")">
                                                    <input type="checkbox" class="checked" id="@("brand_" + ViewBag.Brands[i].BrandID)">
                                                    <label for="@("brand_" + ViewBag.Brands[i].BrandID)">
                                                        <span class="span">@ViewBag.Brands[i].Name</span>
                                                    </label>
                                                </li>
                                            }
                                        </ul>
                                        @if (ViewBag.Brands.Count > 8)
                                        {
                                            <button id="toggleBtn" class="btn btn-link">Xem thêm</button>
                                        }
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <!-- //Category -->
                        <!-- Price Range -->
                        <div class="range border-bottom py-2">
                            <h3 class="agileits-sear-head mb-3">Price Range</h3>
                            <div class="w3l-range">
                                <form action="#" method="post">
                                    <input type="text" id="amount" readonly style="border:0; color:#f6931f; font-weight:bold;">
                                    <div id="slider-range"></div>
                                </form>
                            </div>
                        </div>
                        <!-- //Price Range -->
                    </div>
                </div>



                <!-- //product left -->
                <!-- product right -->
                @{
                    string searchQuery = Request.QueryString["search"];
                    string sortOrder = Request.QueryString["sortOrder"] ?? "random";
                    var products = ((IEnumerable<ThuongMaiDienTu.Models.tb_Product>)ViewBag.Products);

                    if (!string.IsNullOrEmpty(searchQuery))
                    {
                        products = products.Where(x => x.Name.ToLower().Contains(searchQuery.ToLower()));
                    }

                    switch (sortOrder)
                    {
                        case "newest":
                            products = products.OrderByDescending(x => x.CreatedDate);
                            break;
                        case "bestselling":
                            products = products.OrderByDescending(x => x.QuantitySold); 
                            break;
                        case "price_low_high":
                            products = products.OrderBy(x => x.Price);
                            break;
                        case "price_high_low":
                            products = products.OrderByDescending(x => x.Price);
                            break;
                        default:
                            products = products.OrderBy(x => Guid.NewGuid()); 
                            break;
                    }

                    // Phân trang
                    int pageSize = 20;
                    int pageNumber = Request.QueryString["page"] != null ? int.Parse(Request.QueryString["page"]) : 1;
                    int totalItems = products.Count();
                    int totalPages = (int)Math.Ceiling((double)totalItems / pageSize);
                    products = products.Skip((pageNumber - 1) * pageSize).Take(pageSize);
                }

                <div class="agileinfo-ads-display col-lg-10">
                    <div class="container product-cate">
                        @if (!string.IsNullOrEmpty(searchQuery))
                        {
                            <h3 class="random-cate-heading mb-0">Kết quả tìm kiếm cho "@searchQuery"</h3>
                        }
                        else
                        {
                            <h3 class="random-cate-heading mb-0">Sản phẩm nổi bật</h3>
                        }
                        @*<div class="sort-options justify-content-start">
                            <select id="sortOrder" onchange="location = this.value;">
                                <option value="?sortOrder=random&search=@searchQuery" selected>Liên quan</option>
                                <option value="?sortOrder=newest&search=@searchQuery">Mới nhất</option>
                                <option value="?sortOrder=bestselling&search=@searchQuery">Bán chạy</option>
                                <option value="?sortOrder=price_low_high&search=@searchQuery">Giá tăng dần</option>
                                <option value="?sortOrder=price_high_low&search=@searchQuery">Giá giảm dần</option>
                            </select>
                        </div>*@


                        <div class="sort-options">
                            <a href="?sortOrder=random&search=@searchQuery" class="sort-option" data-sort="random">Liên quan</a>
                            <a href="?sortOrder=newest&search=@searchQuery" class="sort-option" data-sort="newest">Mới nhất</a>
                            <a href="?sortOrder=bestselling&search=@searchQuery" class="sort-option" data-sort="bestselling">Bán chạy</a>
                            <a href="?sortOrder=price_low_high&search=@searchQuery" class="sort-option" data-sort="price_low_high">Giá tăng dần</a>
                            <a href="?sortOrder=price_high_low&search=@searchQuery" class="sort-option" data-sort="price_high_low">Giá giảm dần</a>
                        </div>

                        <div class="product-cate-row">
                            @foreach (var product in products)
                            {
                                <a href="/Product/Details/@product.ProductID" class="product-cate-cover col-2-4">
                                    <span>-@product.PromotionPrice%</span>
                                    <div class="product-item">
                                        <div class="product-img">
                                            <img src="~/images/@product.Image" alt="" />
                                        </div>
                                        <h4 class="product-title">@product.Name</h4>
                                        <p class="product-price">
                                            <span class="product-price-old">@string.Format("{0:N0}đ", product.Price)</span>
                                            <span class="product-price-new">@string.Format("{0:N0}đ", product.Price * (100 - product.PromotionPrice) / 100)</span>
                                        </p>
                                    </div>
                                </a>
                            }
                        </div>

                        <!-- Phân trang -->
                        <nav aria-label="Page navigation example">
                            <ul class="pagination">
                                @if (pageNumber > 1)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="?page=@(pageNumber - 1)&search=@searchQuery">
                                            <i class="fa-solid fa-angle-left"></i>
                                        </a>
                                    </li>
                                }
                                @for (int i = 1; i <= totalPages; i++)
                                {
                                    <li class="page-item @(i == pageNumber ? "active" : "")">
                                        <a class="page-link" href="?page=@i&search=@searchQuery">@i</a>
                                    </li>
                                }
                                @if (pageNumber < totalPages)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="?page=@(pageNumber + 1)&search=@searchQuery">
                                            <i class="fa-solid fa-angle-right"></i>
                                        </a>
                                    </li>
                                }
                            </ul>
                        </nav>
                    </div>
                </div>

                <!-- //product right -->
            </div>

            @{
                var randomCategories = ((IEnumerable<ThuongMaiDienTu.Models.tb_ProductCategory>)ViewBag.Categories).OrderBy(c => Guid.NewGuid()).Take(12);
            }
            <div class="row py-4">
                @foreach (var category in randomCategories)
                {
                    <div class="col-sm-4 col-md-3 col-lg-2 mb-4">
                        <div class="d-flex flex-column align-items-center">
                            <img src="/images/@Url.Content(category.Image)" alt="@category.Name" class="img-fluid mb-2" style="max-width: 80px; max-height: 80px;" />
                            <h4 class="text-center">@category.Name</h4>
                        </div>
                    </div>
                }
            </div>

        </div>
    </div>
    <!-- //top products -->
</main>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var toggleBtn = document.getElementById("toggleBtn");
        var brandList = document.getElementById("brandList");
        var hiddenBrands = document.querySelectorAll("#brandList li.hidden");
        var isExpanded = false;

        toggleBtn.addEventListener("click", function () {
            if (isExpanded) {
                hiddenBrands.forEach(function (brand) {
                    brand.classList.add("hidden");
                });
                toggleBtn.textContent = "Xem thêm";
            } else {
                hiddenBrands.forEach(function (brand) {
                    brand.classList.remove("hidden");
                });
                toggleBtn.textContent = "Thu gọn";
            }
            isExpanded = !isExpanded;
        });
    });
</script>

<style>
    #brandList li {
        display: block;
    }

        #brandList li.hidden {
            display: none;
        }

    #categoryList li {
        display: block;
    }

        #categoryList li.hidden {
            display: none;
        }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var toggleCategoryBtn = document.getElementById("toggleCategoryBtn");
        var categoryList = document.getElementById("categoryList");
        var hiddenCategories = document.querySelectorAll("#categoryList li.hidden");
        var isCategoryExpanded = false;

        toggleCategoryBtn.addEventListener("click", function () {
            if (isCategoryExpanded) {
                hiddenCategories.forEach(function (category) {
                    category.classList.add("hidden");
                });
                toggleCategoryBtn.textContent = "Xem thêm";
            } else {
                hiddenCategories.forEach(function (category) {
                    category.classList.remove("hidden");
                });
                toggleCategoryBtn.textContent = "Thu gọn";
            }
            isCategoryExpanded = !isCategoryExpanded;
        });
    });
</script>