@model List<ThuongMaiDienTu.Models.OrderBuy>

@{
    ViewBag.Title = "Orders";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<main class="orderbuy">
    <div class="row px-4">
        <!-- Sidebar -->
        <div class="col-md-2 orderbuy-sidebar">
            <ul>
                <li>
                    <a href="#" class="">
                        <i class="fa-regular fa-user"></i>
                        Tài khoản của tôi
                    </a>
                </li>
                <li>
                    <a href="#" class="active">
                        <i class="fa-solid fa-receipt"></i>
                        Đơn mua
                    </a>
                </li>
            </ul>
        </div>

        <!-- Main content -->
        <div class="col-md-10 orderbuy-main">
            <!-- Order status filter -->
            <div class="btn-group orderbuy-menu-status" role="group" aria-label="Order Status Filter">
                <button type="button" class="btn btn-secondary selected">Chờ thanh toán</button>
                <button type="button" class="btn btn-secondary">Vận chuyển</button>
                <button type="button" class="btn btn-secondary">Đang giao</button>
                <button type="button" class="btn btn-secondary">Hoàn thành</button>
                <button type="button" class="btn btn-secondary">Đã huỷ</button>
            </div>

            <!-- Orders list -->
            @foreach (var order in Model)
            {
                <div class="order">
                    <div class="order-header">
                        <h4>@order.ShopName</h4>
                        <a href="/Shop/Detail/@order.ShopID">
                            <i class="fa-solid fa-store"></i>
                            Xem shop
                        </a>
                        <p>@order.Status</p>
                    </div>

                    <table class="order-details table">
                        <thead>
                        </thead>
                        <tbody>
                            @foreach (var item in order.OrderDetails)
                            {
                                <tr class="order-item">
                                    <td>
                                        <img src="~/images/@item.ProductImage" alt="@item.ProductName" class="product-image" />
                                        @item.ProductName
                                    </td>
                                    <td class="text-center">x @item.Quantity</td>
                                    <td class="text-center">@item.Price.ToString("N0") VND</td>
                                    <td class="text-center">@item.TotalPrice.ToString("N0") VND</td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    <div class="order-actions">
                        <button class="btn btn-primary">Liên hệ người bán</button>
                        <button class="btn btn-danger">Hủy đơn hàng</button>
                    </div>
                </div>
            }
        </div>
    </div>
</main>



<script>
    document.addEventListener('DOMContentLoaded', function () {
        attachButtonClickHandlers();

        function attachButtonClickHandlers() {
            var buttons = document.querySelectorAll('.orderbuy-menu-status .btn');
            buttons.forEach(function (button) {
                button.addEventListener('click', function () {
                    var status = button.innerText.trim();
                    fetchOrders(status);
                    updateSelectedButton(button);
                    // Cập nhật URL mà không tải lại trang
                    var newUrl = `${window.location.origin}${window.location.pathname}?status=${encodeURIComponent(status)}`;
                    history.pushState({ path: newUrl }, '', newUrl);
                });
            });
        }

        function fetchOrders(status) {
            fetch(`/Cart/Orders?status=${encodeURIComponent(status)}`)
                .then(response => response.text())
                .then(html => {
                    var parser = new DOMParser();
                    var doc = parser.parseFromString(html, 'text/html');
                    var newContent = doc.querySelector('.orderbuy-main').innerHTML;
                    document.querySelector('.orderbuy-main').innerHTML = newContent;
                    // Gán lại sự kiện click cho các nút mới
                    attachButtonClickHandlers();
                });
        }

        function updateSelectedButton(selectedButton) {
            var buttons = document.querySelectorAll('.orderbuy-menu-status .btn');
            buttons.forEach(function (button) {
                button.classList.remove('selected');
            });
            selectedButton.classList.add('selected');
        }

        // Đọc giá trị của tham số "status" từ URL và thiết lập nút ban đầu
        var urlParams = new URLSearchParams(window.location.search);
        var status = urlParams.get('status');
        if (status) {
            var initialButton = Array.from(document.querySelectorAll('.orderbuy-menu-status .btn')).find(function (button) {
                return button.innerText.trim() === status;
            });
            if (initialButton) {
                updateSelectedButton(initialButton);
            }
        }
    });
</script>


